<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.0.4</version>
		<relativePath/>
		<!-- lookup parent from repository -->
	</parent>
	// ... existing code ...
	<groupId>net.javaguides</groupId>
	<artifactId>ReactJS-Spring-Boot-CRUD-Full-Stack-App</artifactId>
	<version>1.0.0</version>
	<name>ReactJS-Spring-Boot-CRUD-Full-Stack-App</name>
// ... existing code ...
	<description>Demo project for Spring Boot</description>

	<properties>
		<java.version>17</java.version>
		<!-- Add properties for plugin versions -->
		<jacoco.version>0.8.10</jacoco.version>
		<dependency-check.version>8.4.2</dependency-check.version>
		<cyclonedx.version>2.7.4</cyclonedx.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>com.mysql</groupId>
			<artifactId>mysql-connector-j</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.junit.vintage</groupId>
					<artifactId>junit-vintage-engine</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>

			<!-- JaCoCo Code Coverage -->
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${jacoco.version}</version>
				<executions>
					<execution>
						<id>prepare-agent</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>report</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/site/jacoco</outputDirectory>
							<xml>true</xml>
							<csv>false</csv>
							<html>true</html>
						</configuration>
					</execution>
					<!-- Add execution for check goal if you want to enforce coverage thresholds -->
					<execution>
						<id>check</id>
						<goals>
							<goal>check</goal>
						</goals>
						<configuration>
							<rules>
								<rule>
									<element>BUNDLE</element>
									<limits>
										<limit>
											<counter>INSTRUCTION</counter>
											<value>COVEREDRATIO</value>
											<minimum>0.60</minimum>											<!-- 60% coverage minimum -->
										</limit>
									</limits>
								</rule>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- OWASP Dependency Check - REMOVED AUTOMATIC EXECUTION -->
			<plugin>
				<groupId>org.owasp</groupId>
				<artifactId>dependency-check-maven</artifactId>
				<version>${dependency-check.version}</version>
				<!-- REMOVED executions - we'll run it manually in Jenkins -->
				<configuration>
					<format>XML</format>
					<format>HTML</format>
					<outputDirectory>${project.build.directory}/dependency-check-report</outputDirectory>
					<!-- Don't fail build in Maven - let Jenkins handle it -->
					<failBuildOnCVSS>0</failBuildOnCVSS>
					<suppressionFiles>
						<suppressionFile>${project.basedir}/dependency-suppressions.xml</suppressionFile>
					</suppressionFiles>
				</configuration>
			</plugin>

			<!-- CycloneDX BOM Generation for Dependency Track -->
			<plugin>
				<groupId>org.cyclonedx</groupId>
				<artifactId>cyclonedx-maven-plugin</artifactId>
				<version>2.9.0</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>makeAggregateBom</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<includeBomSerialNumber>true</includeBomSerialNumber>
					<includeBuildSystem>true</includeBuildSystem>
					<includeCompileScope>true</includeCompileScope>
					<includeRuntimeScope>true</includeRuntimeScope>
					<includeProvidedScope>false</includeProvidedScope>
					<includeTestScope>false</includeTestScope>
					<outputFormat>all</outputFormat>					<!-- âœ… key line -->
				</configuration>
			</plugin>

		</plugins>
	</build>

</project>
